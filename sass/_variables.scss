// colors
$maincolor:#B22222;
$firebrick_rgb: rgb(178,34,34);
$breakpoints: (
  small: 480px,
  medium: 640px,
  large: 744px
);

// mixins

@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin left-format{
	width: 50vw;
	height: 100vh;
	position: fixed;
	top:0;
	@include outer-container;
}

@mixin right-format{
	width: 50vw;
	height: 90vh;
	background: white;
	margin-left: 50vw;
	margin-top: 10vh;
	float: left;
}

@mixin emphasis-text{
	@include span-columns(8);
	@include shift(2);
	@include vertical-align;
	h2{
		text-transform: uppercase;
		font-size: 3em;
		font-weight: 500;
		letter-spacing: 1px;
		font-family: Raleway;
	}
}

@mixin cssTriangle{
	position: absolute;
	width: 0;
	height: 0;
	border-top: 15px solid $maincolor;
	border-right: 15px solid $maincolor;
	border-bottom: 15px solid transparent;
	border-left: 15px solid transparent;
}

@mixin hoverUnderlineWhite{
	position: relative;
  	color: white;
  	text-decoration: none;

	  :hover{
	  	color: white;
	  }

  	:before {
	  content: "";
	  position: absolute;
	  width: 100%;
	  height: 2px;
	  bottom: -3px;
	  left: 0;
	  background-color: white;
	  visibility: hidden;
	  -webkit-transform: scaleX(0);
	  transform: scaleX(0);
	  -webkit-transition: all 0.3s ease-in-out 0s;
	  transition: all 0.3s ease-in-out 0s;
	}

	:hover:before {
	  visibility: visible;
	  -webkit-transform: scaleX(1);
	  transform: scaleX(1);
	}
}

@mixin hoverUnderlineRed{
	position: relative;
  	color: firebrick;
  	text-decoration: none;

	  :hover{
	  	color: firebrick;
	  }

  	:before {
	  content: "";
	  position: absolute;
	  width: 100%;
	  height: 2px;
	  bottom: 0;
	  left: 0;
	  background-color: firebrick;
	  visibility: hidden;
	  -webkit-transform: scaleX(0);
	  transform: scaleX(0);
	  -webkit-transition: all 0.3s ease-in-out 0s;
	  transition: all 0.3s ease-in-out 0s;
	}

	:hover:before {
	  visibility: visible;
	  -webkit-transform: scaleX(1);
	  transform: scaleX(1);
	}
}

/*********************
BREAKPOINTS
*********************/



@mixin wider-than($screen-size) {
    @if map-has-key($breakpoints, $screen-size) {
        @media (max-width: map-get($breakpoints, $screen-size)) {
            @content;
        }
    } @else {
        // Debugging
        @warn "'#{$screen-size}' has not been declared as a breakpoint."
    }
}



